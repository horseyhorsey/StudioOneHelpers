name: Build and Deploy Blazor WebAssembly to GitHub Pages

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Install WASM workload
        run: dotnet workload install wasm-tools

      - name: Publish Blazor WebAssembly App
        run: dotnet publish StudioOneHelpers -c Release

      - name: Debug contents of publish folder
        run: |
          echo "Listing publish folder:"
          ls -R StudioOneHelpers/bin/Release/net9.0/publish/wwwroot

      - name: Rewrite base href
        uses: SteveSandersonMS/ghaction-rewrite-base-href@v1.1.0
        with:
          html_path: StudioOneHelpers/bin/Release/net9.0/publish/wwwroot/StudioOneHelpers/index.html
          base_href: /StudioOneHelpers/

      - name: Add .nojekyll and 404.html for SPA routing
        run: |
          touch StudioOneHelpers/bin/Release/net9.0/publish/wwwroot/StudioOneHelpers/.nojekyll
          cat > StudioOneHelpers/bin/Release/net9.0/publish/wwwroot/StudioOneHelpers/404.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="utf-8" />
              <title>StudioOneHelpers</title>
              <base href="/StudioOneHelpers/" />
              <script>
                  // Single Page Apps for GitHub Pages
                  // MIT License
                  // https://github.com/rafgraph/spa-github-pages
                  // This script takes the current url and converts the path and query
                  // string into just a query string, and then redirects the browser
                  // to the new url with only a query string and hash fragment,
                  // e.g. https://www.foo.tld/one/two?a=b&c=d#qwe, becomes
                  // https://www.foo.tld/?/one/two&a=b~and~c=d#qwe
                  // Note: this 404.html file must be at least 512 bytes for it to work
                  // with Internet Explorer (it is currently > 512 bytes)

                  // If you're creating a Project Pages site and NOT using a custom domain,
                  // then set pathSegmentsToKeep to 1 (enter: pathSegmentsToKeep = 1;)
                  // in a console in your browser and press enter (or refresh the page).
                  // This way the code will only replace the route part of the path,
                  // and not the real directory in which the app resides, for example:
                  // https://username.github.io/repo-name/one/two?a=b&c=d#qwe becomes
                  // https://username.github.io/repo-name/?/one/two&a=b~and~c=d#qwe
                  // Otherwise, leave pathSegmentsToKeep as 0.
                  var pathSegmentsToKeep = 1;

                  var l = window.location;
                  l.replace(
                      l.protocol + '//' + l.hostname + (l.port ? ':' + l.port : '') +
                      l.pathname.split('/').slice(0, 1 + pathSegmentsToKeep).join('/') + '/?/' +
                      l.pathname.split('/').slice(1 + pathSegmentsToKeep).join('/').replace(/&/g, '~and~') +
                      (l.search ? '&' + l.search.slice(1).replace(/&/g, '~and~') : '') +
                      l.hash
                  );
              </script>
          </head>
          <body>
          </body>
          </html>
          EOF

      - name: Add SPA redirect script to index.html
        run: |
          # Add the SPA redirect script to index.html
          sed -i '/<script src="_framework\/blazor.webassembly.js"><\/script>/a\
          <script>\
              // Single Page Apps for GitHub Pages\
              // MIT License\
              // https://github.com/rafgraph/spa-github-pages\
              // This script checks to see if a redirect is present in the query string,\
              // converts it back into the correct url and adds it to the\
              // browser's history using window.history.replaceState(...),\
              // which won't cause the browser to attempt to load the new url.\
              // When the single page app is loaded further down in this file,\
              // the correct url will be waiting in the browser's history for\
              // the single page app to route accordingly.\
              (function(l) {\
                  if (l.search[1] === "/" ) {\
                      var decoded = l.search.slice(1).split("&").map(function(s) { \
                          return s.replace(/~and~/g, "&")\
                      }).join("?");\
                      window.history.replaceState(null, null,\
                          l.pathname.slice(0, -1) + decoded + l.hash\
                      );\
                  }\
              }(window.location))\
          </script>' StudioOneHelpers/bin/Release/net9.0/publish/wwwroot/StudioOneHelpers/index.html

      - name: Upload artifact for GitHub Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: StudioOneHelpers/bin/Release/net9.0/publish/wwwroot/StudioOneHelpers

  deploy:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
